{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\frontend-usf\\\\src\\\\components\\\\doctortabs\\\\DoctorUploadAssignment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport SessionContext from \"../../context/SessionContext\";\nimport DoctorSetAssignmentDate from \"./DoctorSetAssignmentDate\";\nimport { FileUploader } from \"react-drag-drop-files\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DoctorUploadAssignment(props) {\n  _s();\n\n  const course_id = props.course_id;\n  const {\n    session: {\n      user: {\n        access_token\n      }\n    }\n  } = useContext(SessionContext);\n  const [dateTrigger, setDateTrigger] = useState(false);\n  const fileTypes = [\"JPG\", \"PNG\", \"GIF\", \"PDF\"];\n  const [assignment_file, setAssignment_file] = useState(null);\n  const [assignment_name, setAssignment_name] = useState(\"\");\n  const [reveal_date, setReveal_date] = useState(\"\");\n  const [deadline, setDeadline] = useState(\"\");\n  const [checked, setChecked] = useState(true);\n  const [notify, setNotify] = useState();\n  let graded;\n\n  const handleChange = assignment_file => {\n    setAssignment_file(assignment_file);\n  };\n\n  async function onSubmit(e) {\n    e.nativeEvent.preventDefault();\n    const body = new FormData();\n\n    if (checked) {\n      graded = 1;\n    } else {\n      graded = 0;\n    }\n\n    body.append(\"course_id\", course_id);\n    body.append(\"assignment_name\", assignment_name);\n    body.append(\"assignment_file\", assignment_file);\n    body.append(\"deadline\", deadline);\n    body.append(\"reveal_date\", reveal_date);\n    body.append(\"graded\", graded);\n    addAssignment(body);\n  }\n\n  const addAssignment = async body => {\n    try {\n      const res = await axios.post(\"http://localhost:8000/api/assignment/store\", body, {\n        headers: {\n          Authorization: `Bearer ${access_token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      if (res.data === \"success\") {\n        setNotify(true);\n      } else {\n        setNotify(false);\n      }\n\n      setAssignment_name(\"\");\n      setAssignment_file(null);\n      setDeadline(\"\");\n      setReveal_date(\"\");\n    } catch {}\n\n    props.getAssignments();\n    props.setUploadAssignment(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup_student_assignment\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup_student_assignment_content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assignment_content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input_assignment_name\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              value: assignment_name,\n              onChange: e => setAssignment_name(e.target.value),\n              type: \"text\",\n              placeholder: \"Enter assignment name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"assignment_description_box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"assignment_description_doctor\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Drag the file you want to upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n                handleChange: handleChange,\n                name: \"file\",\n                types: fileTypes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"assignment_description_buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    defaultChecked: checked,\n                    onChange: () => setChecked(!checked)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: \"#0b3b70\",\n                      fontWeight: \"600\"\n                    },\n                    children: \"Graded\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: \"#ffcb08\",\n                      textDecoration: \"underline\",\n                      cursor: \"pointer\",\n                      fontWeight: \"600\",\n                      marginRight: \"1rem\"\n                    },\n                    onClick: () => setDateTrigger(true),\n                    children: [\" \", \"Set Date\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    style: {\n                      background: \"#0b3b70\",\n                      padding: \".5rem 1rem\",\n                      borderRadius: \".5rem\",\n                      border: \"none\",\n                      color: \"#ffcb08\",\n                      fontWeight: \"600\",\n                      cursor: \"pointer\"\n                    },\n                    onClick: onSubmit,\n                    children: \"Upload\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), notify && notify === true && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"center\",\n            color: \"green\"\n          },\n          children: \"Successful\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), notify && notify === false && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"center\",\n            color: \"red\"\n          },\n          children: \"failed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => props.setUploadAssignment(false),\n          className: \"close_student_assignment_popup\",\n          style: {\n            fontSize: \"1.5rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fal fa-times-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), dateTrigger ? /*#__PURE__*/_jsxDEV(DoctorSetAssignmentDate, {\n      setDateTrigger: setDateTrigger,\n      setReveal_date: setReveal_date,\n      setDeadline: setDeadline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this) : \"\"]\n  }, void 0, true);\n}\n\n_s(DoctorUploadAssignment, \"EyMc2z4NdVLxTyfbOUT40E7eMp0=\");\n\n_c = DoctorUploadAssignment;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoctorUploadAssignment\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/frontend-usf/src/components/doctortabs/DoctorUploadAssignment.js"],"names":["React","useState","useContext","axios","SessionContext","DoctorSetAssignmentDate","FileUploader","DoctorUploadAssignment","props","course_id","session","user","access_token","dateTrigger","setDateTrigger","fileTypes","assignment_file","setAssignment_file","assignment_name","setAssignment_name","reveal_date","setReveal_date","deadline","setDeadline","checked","setChecked","notify","setNotify","graded","handleChange","onSubmit","e","nativeEvent","preventDefault","body","FormData","append","addAssignment","res","post","headers","Authorization","data","getAssignments","setUploadAssignment","target","value","color","fontWeight","textDecoration","cursor","marginRight","background","padding","borderRadius","border","textAlign","fontSize"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AACA,SAASC,YAAT,QAA6B,uBAA7B;;;AAEA,eAAe,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AAAA;;AACpD,QAAMC,SAAS,GAAGD,KAAK,CAACC,SAAxB;AACA,QAAM;AACJC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AADC;AADL,MAIFV,UAAU,CAACE,cAAD,CAJd;AAKA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAMc,SAAS,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,CAAlB;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM,CAACiB,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACqB,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACuB,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACyB,MAAD,EAASC,SAAT,IAAsB1B,QAAQ,EAApC;AACA,MAAI2B,MAAJ;;AAEA,QAAMC,YAAY,GAAIb,eAAD,IAAqB;AACxCC,IAAAA,kBAAkB,CAACD,eAAD,CAAlB;AACD,GAFD;;AAIA,iBAAec,QAAf,CAAwBC,CAAxB,EAA2B;AACzBA,IAAAA,CAAC,CAACC,WAAF,CAAcC,cAAd;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;;AACA,QAAIX,OAAJ,EAAa;AACXI,MAAAA,MAAM,GAAG,CAAT;AACD,KAFD,MAEO;AACLA,MAAAA,MAAM,GAAG,CAAT;AACD;;AACDM,IAAAA,IAAI,CAACE,MAAL,CAAY,WAAZ,EAAyB3B,SAAzB;AACAyB,IAAAA,IAAI,CAACE,MAAL,CAAY,iBAAZ,EAA+BlB,eAA/B;AACAgB,IAAAA,IAAI,CAACE,MAAL,CAAY,iBAAZ,EAA+BpB,eAA/B;AACAkB,IAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBd,QAAxB;AACAY,IAAAA,IAAI,CAACE,MAAL,CAAY,aAAZ,EAA2BhB,WAA3B;AACAc,IAAAA,IAAI,CAACE,MAAL,CAAY,QAAZ,EAAsBR,MAAtB;AACAS,IAAAA,aAAa,CAACH,IAAD,CAAb;AACD;;AAED,QAAMG,aAAa,GAAG,MAAOH,IAAP,IAAgB;AACpC,QAAI;AACF,YAAMI,GAAG,GAAG,MAAMnC,KAAK,CAACoC,IAAN,CAChB,4CADgB,EAEhBL,IAFgB,EAGhB;AACEM,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAAS7B,YAAa,EAD/B;AAEP,0BAAgB;AAFT;AADX,OAHgB,CAAlB;;AAUA,UAAI0B,GAAG,CAACI,IAAJ,KAAa,SAAjB,EAA4B;AAC1Bf,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD,OAFD,MAEO;AACLA,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD;;AACDR,MAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAF,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAM,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAF,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD,KApBD,CAoBE,MAAM,CAAE;;AACVb,IAAAA,KAAK,CAACmC,cAAN;AACAnC,IAAAA,KAAK,CAACoC,mBAAN,CAA0B,KAA1B;AACD,GAxBD;;AA0BA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,mCACE;AACE,cAAA,KAAK,EAAE1B,eADT;AAEE,cAAA,QAAQ,EAAGa,CAAD,IAAOZ,kBAAkB,CAACY,CAAC,CAACc,MAAF,CAASC,KAAV,CAFrC;AAGE,cAAA,IAAI,EAAC,MAHP;AAIE,cAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,+BAAf;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,YAAD;AACE,gBAAA,YAAY,EAAEjB,YADhB;AAEE,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,KAAK,EAAEd;AAHT;AAAA;AAAA;AAAA;AAAA,sBAFF,eAOE;AAAK,gBAAA,SAAS,EAAC,gCAAf;AAAA,wCACE;AAAA,0CACE;AACE,oBAAA,IAAI,EAAC,UADP;AAEE,oBAAA,cAAc,EAAES,OAFlB;AAGE,oBAAA,QAAQ,EAAE,MAAMC,UAAU,CAAC,CAACD,OAAF;AAH5B;AAAA;AAAA;AAAA;AAAA,0BADF,eAME;AAAM,oBAAA,KAAK,EAAE;AAAEuB,sBAAAA,KAAK,EAAE,SAAT;AAAoBC,sBAAAA,UAAU,EAAE;AAAhC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAWE;AAAA,0CACE;AACE,oBAAA,KAAK,EAAE;AACLD,sBAAAA,KAAK,EAAE,SADF;AAELE,sBAAAA,cAAc,EAAE,WAFX;AAGLC,sBAAAA,MAAM,EAAE,SAHH;AAILF,sBAAAA,UAAU,EAAE,KAJP;AAKLG,sBAAAA,WAAW,EAAE;AALR,qBADT;AAQE,oBAAA,OAAO,EAAE,MAAMrC,cAAc,CAAC,IAAD,CAR/B;AAAA,+BAUG,GAVH;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAcE;AACE,oBAAA,KAAK,EAAE;AACLsC,sBAAAA,UAAU,EAAE,SADP;AAELC,sBAAAA,OAAO,EAAE,YAFJ;AAGLC,sBAAAA,YAAY,EAAE,OAHT;AAILC,sBAAAA,MAAM,EAAE,MAJH;AAKLR,sBAAAA,KAAK,EAAE,SALF;AAMLC,sBAAAA,UAAU,EAAE,KANP;AAOLE,sBAAAA,MAAM,EAAE;AAPH,qBADT;AAUE,oBAAA,OAAO,EAAEpB,QAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAdF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EA8DGJ,MAAM,IAAIA,MAAM,KAAK,IAArB,iBACC;AAAG,UAAA,KAAK,EAAE;AAAE8B,YAAAA,SAAS,EAAE,QAAb;AAAuBT,YAAAA,KAAK,EAAE;AAA9B,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/DJ,EAiEGrB,MAAM,IAAIA,MAAM,KAAK,KAArB,iBACC;AAAG,UAAA,KAAK,EAAE;AAAE8B,YAAAA,SAAS,EAAE,QAAb;AAAuBT,YAAAA,KAAK,EAAE;AAA9B,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlEJ,eAoEE;AACE,UAAA,OAAO,EAAE,MAAMvC,KAAK,CAACoC,mBAAN,CAA0B,KAA1B,CADjB;AAEE,UAAA,SAAS,EAAC,gCAFZ;AAGE,UAAA,KAAK,EAAE;AAAEa,YAAAA,QAAQ,EAAE;AAAZ,WAHT;AAAA,iCAKE;AAAG,YAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBApEF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EA+EG5C,WAAW,gBACV,QAAC,uBAAD;AACE,MAAA,cAAc,EAAEC,cADlB;AAEE,MAAA,cAAc,EAAEO,cAFlB;AAGE,MAAA,WAAW,EAAEE;AAHf;AAAA;AAAA;AAAA;AAAA,YADU,GAOV,EAtFJ;AAAA,kBADF;AA2FD;;GA3JuBhB,sB;;KAAAA,sB","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport SessionContext from \"../../context/SessionContext\";\nimport DoctorSetAssignmentDate from \"./DoctorSetAssignmentDate\";\nimport { FileUploader } from \"react-drag-drop-files\";\n\nexport default function DoctorUploadAssignment(props) {\n  const course_id = props.course_id;\n  const {\n    session: {\n      user: { access_token },\n    },\n  } = useContext(SessionContext);\n  const [dateTrigger, setDateTrigger] = useState(false);\n  const fileTypes = [\"JPG\", \"PNG\", \"GIF\", \"PDF\"];\n  const [assignment_file, setAssignment_file] = useState(null);\n  const [assignment_name, setAssignment_name] = useState(\"\");\n  const [reveal_date, setReveal_date] = useState(\"\");\n  const [deadline, setDeadline] = useState(\"\");\n  const [checked, setChecked] = useState(true);\n  const [notify, setNotify] = useState();\n  let graded;\n\n  const handleChange = (assignment_file) => {\n    setAssignment_file(assignment_file);\n  };\n\n  async function onSubmit(e) {\n    e.nativeEvent.preventDefault();\n    const body = new FormData();\n    if (checked) {\n      graded = 1;\n    } else {\n      graded = 0;\n    }\n    body.append(\"course_id\", course_id);\n    body.append(\"assignment_name\", assignment_name);\n    body.append(\"assignment_file\", assignment_file);\n    body.append(\"deadline\", deadline);\n    body.append(\"reveal_date\", reveal_date);\n    body.append(\"graded\", graded);\n    addAssignment(body);\n  }\n\n  const addAssignment = async (body) => {\n    try {\n      const res = await axios.post(\n        \"http://localhost:8000/api/assignment/store\",\n        body,\n        {\n          headers: {\n            Authorization: `Bearer ${access_token}`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      if (res.data === \"success\") {\n        setNotify(true);\n      } else {\n        setNotify(false);\n      }\n      setAssignment_name(\"\");\n      setAssignment_file(null);\n      setDeadline(\"\");\n      setReveal_date(\"\");\n    } catch {}\n    props.getAssignments();\n    props.setUploadAssignment(false);\n  };\n\n  return (\n    <>\n      <div className=\"popup_student_assignment\">\n        <div className=\"popup_student_assignment_content\">\n          <div className=\"assignment_content\">\n            <div className=\"input_assignment_name\">\n              <input\n                value={assignment_name}\n                onChange={(e) => setAssignment_name(e.target.value)}\n                type=\"text\"\n                placeholder=\"Enter assignment name\"\n              />\n            </div>\n            <div className=\"assignment_description_box\">\n              <div className=\"assignment_description_doctor\">\n                <p>Drag the file you want to upload</p>\n                <FileUploader\n                  handleChange={handleChange}\n                  name=\"file\"\n                  types={fileTypes}\n                />\n                <div className=\"assignment_description_buttons\">\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      defaultChecked={checked}\n                      onChange={() => setChecked(!checked)}\n                    />\n                    <span style={{ color: \"#0b3b70\", fontWeight: \"600\" }}>\n                      Graded\n                    </span>\n                  </div>\n                  <div>\n                    <span\n                      style={{\n                        color: \"#ffcb08\",\n                        textDecoration: \"underline\",\n                        cursor: \"pointer\",\n                        fontWeight: \"600\",\n                        marginRight: \"1rem\",\n                      }}\n                      onClick={() => setDateTrigger(true)}\n                    >\n                      {\" \"}\n                      Set Date\n                    </span>\n                    <button\n                      style={{\n                        background: \"#0b3b70\",\n                        padding: \".5rem 1rem\",\n                        borderRadius: \".5rem\",\n                        border: \"none\",\n                        color: \"#ffcb08\",\n                        fontWeight: \"600\",\n                        cursor: \"pointer\",\n                      }}\n                      onClick={onSubmit}\n                    >\n                      Upload\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {notify && notify === true && (\n            <p style={{ textAlign: \"center\", color: \"green\" }}>Successful</p>\n          )}\n          {notify && notify === false && (\n            <p style={{ textAlign: \"center\", color: \"red\" }}>failed</p>\n          )}\n          <span\n            onClick={() => props.setUploadAssignment(false)}\n            className=\"close_student_assignment_popup\"\n            style={{ fontSize: \"1.5rem\" }}\n          >\n            <i class=\"fal fa-times-circle\"></i>\n          </span>\n        </div>\n      </div>\n      {dateTrigger ? (\n        <DoctorSetAssignmentDate\n          setDateTrigger={setDateTrigger}\n          setReveal_date={setReveal_date}\n          setDeadline={setDeadline}\n        />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}