{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\frontend-usf\\\\src\\\\components\\\\login\\\\Login.Popup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport SessionContext from '../../context/SessionContext';\nimport \"./Login.Popup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPopup(props) {\n  _s();\n\n  const value = props.value;\n  const {\n    actions: {\n      loginDoctor,\n      loginStudent\n    }\n  } = useContext(SessionContext);\n  const [state, setValue] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = state;\n\n  function setState(nextState) {\n    setValue(prevState => ({ ...prevState,\n      ...nextState\n    }));\n  }\n\n  function handleChange(e) {\n    let {\n      name,\n      value\n    } = e.target;\n    setState({\n      [name]: value\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.nativeEvent.preventDefault();\n\n    if (value === 'doctor') {\n      loginDoctor(email, password);\n    } else if (value === 'student') {\n      loginStudent(email, password);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup_login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup_content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Welcome! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"popup_input\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Forget Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"popup_signin\",\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => props.setTrigger(false),\n        className: \"close_popup\",\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPopup, \"M4W6vJwKH3xsNo4TSFKKSPvJeqk=\");\n\n_c = LoginPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPopup\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/frontend-usf/src/components/login/Login.Popup.js"],"names":["React","useContext","useState","SessionContext","LoginPopup","props","value","actions","loginDoctor","loginStudent","state","setValue","email","password","setState","nextState","prevState","handleChange","e","name","target","handleSubmit","nativeEvent","preventDefault","setTrigger"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAO,mBAAP;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACtC,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;AACA,QAAM;AACFC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,WAAF;AAAgBC,MAAAA;AAAhB;AADP,MAEFR,UAAU,CAACE,cAAD,CAFd;AAIA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC;AAC/BU,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,QAAQ,EAAE;AAFqB,GAAD,CAAlC;AAKA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,KAA5B;;AAEA,WAASI,QAAT,CAAkBC,SAAlB,EAA6B;AACzBJ,IAAAA,QAAQ,CAAEK,SAAD,KAAgB,EACrB,GAAGA,SADkB;AAErB,SAAGD;AAFkB,KAAhB,CAAD,CAAR;AAIH;;AAED,WAASE,YAAT,CAAsBC,CAAtB,EAAyB;AACrB,QAAI;AAAEC,MAAAA,IAAF;AAAQb,MAAAA;AAAR,QAAkBY,CAAC,CAACE,MAAxB;AACAN,IAAAA,QAAQ,CAAC;AAAE,OAACK,IAAD,GAAQb;AAAV,KAAD,CAAR;AACH;;AAED,iBAAee,YAAf,CAA4BH,CAA5B,EAA+B;AAC3BA,IAAAA,CAAC,CAACI,WAAF,CAAcC,cAAd;;AACA,QAAGjB,KAAK,KAAK,QAAb,EAAsB;AAClBE,MAAAA,WAAW,CAACI,KAAD,EAAQC,QAAR,CAAX;AACH,KAFD,MAEO,IAAIP,KAAK,KAAK,SAAd,EAAwB;AAC3BG,MAAAA,YAAY,CAACG,KAAD,EAAOC,QAAP,CAAZ;AACH;AACJ;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,QAAQ,EAAEQ,YAAxC;AAAA,gCACQ;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,IAAI,EAAC,OAFT;AAGI,UAAA,WAAW,EAAC,OAHhB;AAII,UAAA,KAAK,EAAET,KAJX;AAKI,UAAA,QAAQ,EAAEK,YALd;AAMI,UAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,gBADR,eASQ;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,WAAW,EAAC,UAHhB;AAII,UAAA,KAAK,EAAEJ,QAJX;AAKI,UAAA,QAAQ,EAAEI,YALd;AAMI,UAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,gBATR,eAiBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBR,eAkBI;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,IAAI,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAwBI;AAAM,QAAA,OAAO,EAAE,MAAIZ,KAAK,CAACmB,UAAN,CAAiB,KAAjB,CAAnB;AAA4C,QAAA,SAAS,EAAC,aAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;GAlEuBpB,U;;KAAAA,U","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport SessionContext from '../../context/SessionContext';\nimport \"./Login.Popup.css\"\n\nexport default function LoginPopup(props) {\n    const value = props.value;\n    const {\n        actions: { loginDoctor , loginStudent },\n    } = useContext(SessionContext);\n      \n    const [state, setValue] = useState({\n        email: \"\",\n        password: \"\",\n    });\n\n    const { email, password } = state;\n  \n    function setState(nextState) {\n        setValue((prevState) => ({\n            ...prevState,\n            ...nextState,\n        }));\n    }\n\n    function handleChange(e) {\n        let { name, value } = e.target;\n        setState({ [name]: value });\n    }\n\n    async function handleSubmit(e) {\n        e.nativeEvent.preventDefault();\n        if(value === 'doctor'){\n            loginDoctor(email, password);\n        } else if (value === 'student'){\n            loginStudent(email,password);\n        }\n    }\n\n    return (\n        <div className=\"popup_login\">\n            <div className=\"popup_content\">\n                <h2> Welcome! </h2>\n                <form className=\"popup_input\" onSubmit={handleSubmit}>\n                        <input \n                            type=\"email\" \n                            name=\"email\" \n                            placeholder=\"Email\" \n                            value={email}\n                            onChange={handleChange}\n                            required\n                        />\n                        <input \n                            type=\"password\" \n                            name=\"password\" \n                            placeholder=\"Password\" \n                            value={password}\n                            onChange={handleChange}\n                            required\n                        />\n                        <span>Forget Password?</span>\n                    <button className=\"popup_signin\" type=\"submit\">\n                        Sign In\n                    </button>\n                </form>\n                <span onClick={()=>props.setTrigger(false)} className=\"close_popup\">\n                    x\n                </span>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}